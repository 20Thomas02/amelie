# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-03-25 22:00
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0001_initial'),
        ('calendar', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_nl', models.SlugField(verbose_name='Name')),
                ('name_en', models.SlugField(blank=True, verbose_name='Name (en)')),
            ],
            options={
                'verbose_name': 'Category',
                'ordering': ['name_nl'],
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('subject', models.CharField(choices=[('Grading', 'Marking period expired'), ('Facilities', 'Facilities'), ('Information', 'Information supply'), ('Internationalization', 'Internationalization'), ('Other', 'Otherwise')], max_length=50, verbose_name='Subject')),
                ('summary', models.CharField(blank=True, max_length=100, verbose_name='Summary')),
                ('comment', models.TextField(blank=True, verbose_name='Remarks')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('progress', models.BooleanField(default=False, verbose_name='Feedback on progress')),
                ('anonymous', models.BooleanField(default=False, verbose_name='Handle anonymously')),
                ('completed', models.BooleanField(default=False, verbose_name='Handled')),
                ('part', models.CharField(blank=True, max_length=255, null=True, verbose_name='Subject')),
                ('year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Year')),
                ('period', models.CharField(blank=True, choices=[('Q1', 'Quarter 1'), ('Q2', 'Quarter 2'), ('Q3', 'Quarter 3'), ('Q4', 'Quarter 4'), ('S1', 'Semester 1'), ('S2', 'Semester 2')], max_length=2, null=True, verbose_name='Term')),
            ],
            options={
                'verbose_name': 'Complaint',
                'ordering': ['-published'],
                'verbose_name_plural': 'Complaints',
            },
        ),
        migrations.CreateModel(
            name='ComplaintComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('comment', models.TextField(verbose_name='Remarks')),
                ('complaint', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='education.Complaint', verbose_name='Complaint')),
                ('person', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='members.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Comment on a complaint',
                'ordering': ['complaint', '-published'],
                'verbose_name_plural': 'Comments on a complaint',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('course_type', models.CharField(choices=[('MOD', 'Module'), ('COURSE', 'Course')], default='COURSE', max_length=6, verbose_name='Course type')),
                ('course_code', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(100000), django.core.validators.MaxValueValidator(999999999)], verbose_name='Course code')),
            ],
            options={
                'verbose_name': 'Course',
                'ordering': ['name', 'course_code'],
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='EducationEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='calendar.Event')),
                ('education_organizer', models.CharField(blank=True, max_length=100, verbose_name='organiser')),
            ],
            bases=('calendar.event',),
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_nl', models.CharField(max_length=100, verbose_name='Name')),
                ('name_en', models.CharField(blank=True, max_length=100, verbose_name='Name (en)')),
                ('slug', models.SlugField(editable=False, max_length=100)),
                ('content_nl', models.TextField(verbose_name='Content')),
                ('content_en', models.TextField(blank=True, verbose_name='Content (en)')),
                ('last_changed', models.DateTimeField(auto_now=True)),
                ('position', models.IntegerField(unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='education.Category')),
            ],
            options={
                'verbose_name': 'Page',
                'ordering': ['position'],
                'verbose_name_plural': 'Pages',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Year')),
                ('name', models.CharField(max_length=5, verbose_name='Name')),
                ('start', models.DateField(verbose_name='Starts')),
                ('end', models.DateField(verbose_name='Ends')),
                ('end_lectures', models.DateField(verbose_name='End of lectures')),
                ('exam_enrollment_start', models.DateField(blank=True, null=True, verbose_name='Exam enrollment starts')),
                ('exam_enrollment_end', models.DateField(blank=True, null=True, verbose_name='Exam enrollment stops')),
                ('course_enrollment_start', models.DateField(blank=True, null=True, verbose_name='Enrollment for courses starts')),
                ('course_enrollment_end', models.DateField(blank=True, null=True, verbose_name='Enrollment for courses stops')),
                ('books_ordering_start', models.DateField(blank=True, null=True, verbose_name='Book order period starts')),
                ('books_ordering_end', models.DateField(blank=True, null=True, verbose_name='Book order stops')),
            ],
            options={
                'verbose_name': 'Part of year',
                'ordering': ['year', 'start', '-name'],
                'verbose_name_plural': 'Parts of year',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='education.Competition')),
                ('person', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='members.Person')),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
            },
        ),
        migrations.AddField(
            model_name='complaint',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='education.Course', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='people',
            field=models.ManyToManyField(editable=False, related_name='personen', to='members.Person', verbose_name='People'),
        ),
        migrations.AddField(
            model_name='complaint',
            name='reporter',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='members.Person', verbose_name='Reporter'),
        ),
    ]
